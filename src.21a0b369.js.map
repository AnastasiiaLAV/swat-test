{"version":3,"sources":["js/mobile-menu.js","js/buttons.js","js/animation-counter.js","index.js"],"names":["mobileMenu","document","querySelector","openMenuBtn","closeMenuBtn","toggleMenu","isMenuOpen","getAttribute","setAttribute","classList","toggle","bodyScrollLock","body","addEventListener","window","matchMedia","e","matches","remove","enableBodyScroll","modalWindowsArr","openButtonsArr","closeButtonsArr","forEach","element","push","i","length","openButton","closeButton","console","log","modalWindow","fun","mobile","runNumbers","check","run1","run2","run3","throttleScroll","runall","removeEventListener","isScrolling","requestAnimationFrame","el","elementBoundary","getElementById","getBoundingClientRect","bottom","height","top","innerHeight","timer","id","b","c","d","numbers","currentNumber","maxNumber","step","steps","speed","innerText","setTimeout"],"mappings":"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","file":"src.21a0b369.js","sourceRoot":"../src","sourcesContent":["(() => {\n  const mobileMenu = document.querySelector('.js-menu-container');\n  const openMenuBtn = document.querySelector('.js-open-menu');\n  const closeMenuBtn = document.querySelector('.js-close-menu');\n\n  const toggleMenu = () => {\n    const isMenuOpen = openMenuBtn.getAttribute('aria-expanded') === 'true' || false;\n    openMenuBtn.setAttribute('aria-expanded', !isMenuOpen);\n    mobileMenu.classList.toggle('is-open');\n\n    const scrollLockMethod = !isMenuOpen ? 'disableBodyScroll' : 'enableBodyScroll';\n    bodyScrollLock[scrollLockMethod](document.body);\n  };\n\n  openMenuBtn.addEventListener('click', toggleMenu);\n  closeMenuBtn.addEventListener('click', toggleMenu);\n\n  // Закрываем мобильное меню на более широких экранах\n  // в случае изменения ориентации устройства.\n  window.matchMedia('(min-width: 1280px)').addEventListener('change', e => {\n    if (!e.matches) return;\n    mobileMenu.classList.remove('is-open');\n    openMenuBtn.setAttribute('aria-expanded', false);\n    bodyScrollLock.enableBodyScroll(document.body);\n  });\n})();\n","//\n// в массив добавляй новые значения в одинарные скобки через запятую\n//\n// в массив modalWindowsArr пиши атрибут окна, которое нужно открыть/закрыть\n// в массиве openButtonsArr будут сами записаны атрибуты кнопок открытия\n// в массиве closeButtonsArr будут сами записаны атрибуты кнопок закрытия\n// \n// создай класс \"modal-is-hidden\", впиши его во все окна, этот класс\n// должен скрывать окно,\n//\n// gl&hf\n//\n\n{\n    let modalWindowsArr = [\n        'menu-modal', 'menu-buy-modal', \n        'header-products-modal', 'header-how-modal', 'header-milk-modal',\n        'product-1-modal', 'product-2-modal', 'product-3-modal',\n        'how-read-more-modal',\n        'contacts-location-modal', 'contacts-franchise-modal',\n    ];\n    let openButtonsArr = [];\n    let closeButtonsArr = [];\n\n    modalWindowsArr.forEach(element => {\n        openButtonsArr.push(element + '-open');\n        closeButtonsArr.push(element + '-close');\n    })\n\n    for (let i = 0; i < openButtonsArr.length; i++) {\n        \n        let openButton = document.querySelector('[' + openButtonsArr[i] + ']');\n        if (!openButton) {\n            continue;\n        }\n        let closeButton = document.querySelector('[' + closeButtonsArr[i] + ']');\n        if (!closeButton) {\n            console.log(\"Уважаемый разработчик, вы добавили кнопку открытия '\" + modalWindowsArr[i] + \"', но не добавили кнопку закрытия модалки\");\n            continue;\n        }\n        let modalWindow = document.querySelector('[' + modalWindowsArr[i] + ']');\n        if (!closeButton) {\n            console.log(\"Уважаемый разработчик, вы добавили кнопку открытия и закрытия '\" + modalWindowsArr[i] + \"', но не добавили модалку\");\n            continue;\n        }\n\n        let fun = function () {\n            modalWindow.classList.toggle('modal-is-hidden');\n        }\n\n        openButton.addEventListener('click', fun);\n        closeButton.addEventListener('click', fun);\n    }\n    \n}","\n  {\n    //write - let mobile = [false, false, false] - for enable mobile adnimation\n    //write - let mobile = false - for disable mobile adnimation\n    let mobile = [false, false, false];\n\n    //add event for scroll\n\n    let runNumbers = (function () {\n      if (!mobile) {\n        return function () {\n          if (check('counter-1')) {\n            runall();\n            window.removeEventListener('scroll', runNumbers, false);\n          }\n        };\n      } else {\n        return function () {\n          if (check('counter-1') && !mobile[0]) {\n            run1();\n            mobile[0] = true;\n          }\n          if (check('counter-2') && !mobile[1]) {\n            run2();\n            mobile[1] = true;\n          }\n          if (check('counter-3') && !mobile[2]) {\n            run3();\n            mobile[2] = true;\n          }\n          if (mobile[0] && mobile[1] && mobile[2]) {\n            window.addEventListener('scroll', throttleScroll, false);\n          }\n        };\n      }\n    })();\n    \n    let isScrolling = false;\n    window.addEventListener('scroll', throttleScroll, false);\n    \n    //function prevents call an event more than 60 times/second\n    function throttleScroll() {\n      if (isScrolling == false) {\n        window.requestAnimationFrame(function () {\n          runNumbers();\n          isScrolling = false;\n        });\n      }\n      isScrolling = true;\n    }\n    // check if element is on a screen\n    function check(element) {\n      let el = document.getElementById(element);\n      let elementBoundary = el.getBoundingClientRect();\n\n      let bottom = elementBoundary.bottom;\n      let height = elementBoundary.height;\n      let top = elementBoundary.height;\n\n      return top + height >= 0 && height + window.innerHeight >= bottom;\n    }\n    // run animation\n    let runall = function () {\n      timer('counter-1', 721, [4, 3, 1], 3);\n      timer('counter-2', 16, [1, 1, 1], 1);\n      timer('counter-3', 84, [4, 2, 1], 4);\n    };\n\n    let run1 = function () {\n      timer('counter-1', 721, [6, 1, 1], 3);\n    };\n\n    let run2 = function () {\n      timer('counter-2', 16, [1, 1, 1], 2);\n    };\n\n    let run3 = function () {\n      timer('counter-3', 84, [4, 2, 1], 4);\n    };\n\n    //the animation \n    function timer(id, b, c, d) {\n      let numbers = document.getElementById(id);\n\n      let currentNumber = 0;\n      let maxNumber = b;\n\n      let step = c[0];\n      let steps = [b - b * 0.15, b - b * 0.09];\n\n      let duration = d;\n      let speed = (1000 * duration) / maxNumber;\n      var speed2 = (speed / maxNumber) * 3;\n\n      let fun = function () {\n        currentNumber = currentNumber + step;\n        numbers.innerText = currentNumber;\n        if (currentNumber > maxNumber) {\n          numbers.innerText = maxNumber;\n          console.log('finish');\n        } else if (currentNumber > steps[0]) {\n          step = c[1];\n          speed = speed + speed / 50;\n          setTimeout(fun, speed);\n        } else if (currentNumber > steps[1]) {\n          step = c[2];\n          speed = speed + speed;\n          setTimeout(fun, speed);\n        } else {\n          speed = speed + speed / 250;\n          setTimeout(fun, speed);\n        }\n      };\n\n      fun();\n    }\n  }\n\n","import './sass/main.scss';\nimport './js/mobile-menu';\n// import './js/modal';\nimport './js/buttons';\nimport './js/animation-counter';\n"]}